---
kind: pipeline
type: docker
name: check

platform:
  os: linux
  arch: amd64

steps:
- name: download
  image: golang:1.19.1
  commands:
  - go mod download
  volumes:
  - name: gopath
    path: /go
  - name: docker
    path: /var/run/docker.sock

- name: lint
  image: golang:1.19.1
  commands:
  - make lint
  volumes:
  - name: gopath
    path: /go
  - name: docker
    path: /var/run/docker.sock
  depends_on:
  - download

- name: test
  image: golang:1.19.1
  commands:
  - go test ./...
  volumes:
  - name: gopath
    path: /go
  - name: docker
    path: /var/run/docker.sock

services:
- name: grizzly-grafana
  image: alpine
  commands:
  - apk add docker make && make run-test-image
  ports:
  - 3000
  volumes:
  - name: gopath
    path: /go
  - name: docker
    path: /var/run/docker.sock

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: gopath
  temp: {}

---
kind: pipeline
type: docker
name: release

platform:
  os: linux
  arch: amd64

steps:
- name: fetch-tags
  image: golang:1.19.1
  commands:
  - git fetch origin --tags
  volumes:
  - name: gopath
    path: /go
  - name: docker
    path: /var/run/docker.sock

- name: cross
  image: golang:1.19.1
  commands:
  - make cross
  volumes:
  - name: gopath
    path: /go
  - name: docker
    path: /var/run/docker.sock

- name: publish
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    draft: true
    files: dist/*
    note: "This is release ${DRONE_TAG} of Grizzly (`grr`). Check out the [CHANGELOG](CHANGELOG.md) for detailed release notes.\n## Install instructions\n\n#### Binary:\n```bash\n# download the binary (adapt os and arch as needed)\n$ curl -fSL -o \"/usr/local/bin/grr\" \"https://github.com/grafana/grizzly/releases/download/${DRONE_TAG}/grr-linux-amd64\"\n\n# make it executable\n$ chmod a+x \"/usr/local/bin/grr\"\n\n# have fun :)\n$ grr --help\n```\n"
    title: ${DRONE_TAG}

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: gopath
  temp: {}

trigger:
  event:
  - tag

depends_on:
- check

---
kind: pipeline
type: docker
name: docker-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: static
  image: golang:1.19.1
  commands:
  - make static
  volumes:
  - name: gopath
    path: /go
  - name: docker
    path: /var/run/docker.sock

- name: container
  image: plugins/docker
  settings:
    auto_tag: true
    auto_tag_suffix: amd64
    password:
      from_secret: docker_password
    repo: grafana/grizzly
    username:
      from_secret: docker_username

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: gopath
  temp: {}

trigger:
  ref:
  - refs/heads/master
  - refs/heads/docker
  - refs/tags/v*

depends_on:
- check

---
kind: pipeline
type: docker
name: docker-arm

platform:
  os: linux
  arch: arm

steps:
- name: static
  image: golang:1.19.1
  commands:
  - make static
  volumes:
  - name: gopath
    path: /go
  - name: docker
    path: /var/run/docker.sock

- name: container
  image: plugins/docker
  settings:
    auto_tag: true
    auto_tag_suffix: arm
    password:
      from_secret: docker_password
    repo: grafana/grizzly
    username:
      from_secret: docker_username

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: gopath
  temp: {}

trigger:
  ref:
  - refs/heads/master
  - refs/heads/docker
  - refs/tags/v*

depends_on:
- check

---
kind: pipeline
type: docker
name: docker-arm64

platform:
  os: linux
  arch: arm64

steps:
- name: static
  image: golang:1.19.1
  commands:
  - make static
  volumes:
  - name: gopath
    path: /go
  - name: docker
    path: /var/run/docker.sock

- name: container
  image: plugins/docker
  settings:
    auto_tag: true
    auto_tag_suffix: arm64
    password:
      from_secret: docker_password
    repo: grafana/grizzly
    username:
      from_secret: docker_username

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: gopath
  temp: {}

trigger:
  ref:
  - refs/heads/master
  - refs/heads/docker
  - refs/tags/v*

depends_on:
- check

---
kind: pipeline
type: docker
name: manifest

platform:
  os: linux
  arch: amd64

steps:
- name: manifest
  image: plugins/manifest
  settings:
    auto_tag: true
    ignore_missing: true
    password:
      from_secret: docker_password
    spec: .drone/docker-manifest.tmpl
    username:
      from_secret: docker_username

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: gopath
  temp: {}

trigger:
  ref:
  - refs/heads/master
  - refs/heads/docker
  - refs/tags/v*

depends_on:
- docker-amd64
- docker-arm
- docker-arm64

---
kind: secret
name: github_token

get:
  path: infra/data/ci/github/grafanabot
  name: pat

---
kind: secret
name: docker_username

get:
  path: infra/data/ci/docker_hub
  name: username

---
kind: secret
name: docker_password

get:
  path: infra/data/ci/docker_hub
  name: password

---
kind: signature
hmac: c43c45c827c9fb5c2436edeebb7f04fdc115e79e219691524970aeb83d2ead4c

...
