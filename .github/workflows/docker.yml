# See https://docs.docker.com/build/ci/github-actions/multi-platform/
# Copied from Tanka: https://github.com/grafana/tanka/blob/main/.github/workflows/docker.yml
# Consider sharing here: https://github.com/grafana/shared-workflows
name: Docker

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - '*'

permissions:
  contents: read
  id-token: write

env:
  REGISTRY_IMAGE: grafana/grizzly
  # Docker image tags. See https://github.com/docker/metadata-action for format
  TAGS_CONFIG: |
    type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
    type=sha,prefix={{branch}}-,format=short,enable=${{ github.ref == 'refs/heads/main' }}
    type=semver,pattern={{version}}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm64
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - run: GOOS=linux GOARCH=${{ matrix.arch }} make static
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: ${{ env.TAGS_CONFIG }}

      # Setup buildx
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: grafana/shared-workflows/actions/dockerhub-login@main
  
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/${{ matrix.arch }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Export digest
        id: digest
        if: github.event_name != 'pull_request'
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"          
          echo "artifact_name=digests-linux/${{ matrix.arch }}" | sed -e 's/\//-/g' >> "$GITHUB_OUTPUT"

      - name: Upload digest
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.digest.outputs.artifact_name }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  
  merge:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: 
      - build
    steps:
      - name: Download digests (linux/amd64)
        uses: actions/download-artifact@v4
        with:
          name: digests-linux-amd64
          path: /tmp/digests-linux-amd64

      - name: Download digests (linux/arm64)
        uses: actions/download-artifact@v4
        with:
          name: digests-linux-arm64
          path: /tmp/digests-linux-arm64

      - name: Merge digests
        run: |
          mkdir -p /tmp/digests
          cp /tmp/digests-linux-amd64/* /tmp/digests/
          cp /tmp/digests-linux-arm64/* /tmp/digests/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
    
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: ${{ env.TAGS_CONFIG }}

      # Login to Docker Hub
      - name: Get Secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@main
        with:
          # Secrets placed in the ci/common/<path> path in Vault
          common_secrets: |
            DOCKERHUB_USERNAME=dockerhub:username
            DOCKERHUB_TOKEN=dockerhub:password
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)          
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}          
